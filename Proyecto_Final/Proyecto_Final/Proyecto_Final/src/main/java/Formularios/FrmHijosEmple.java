/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Formularios;

import Clases.Messages;
import Controllers.EmpleadoController;
import Controllers.HijoEmpleadoController;
import Models.Empleado;
import Models.HijoEmpleado;
import java.awt.Toolkit;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Laura Isabel
 */
public class FrmHijosEmple extends javax.swing.JInternalFrame {

    /**
     * Creates new form FrmHijosEmple
     */
    DefaultTableModel dtm = new DefaultTableModel();

    List<HijoEmpleado> hijosEmple;
    List<Empleado> empleados;

    HijoEmpleadoController hijoRepository;

    HijoEmpleado selectedHijoEmple = null;

    int selectedIndex;

    private void getEmpleados() {
        try {
            empleados = new EmpleadoController().all();

            for (Empleado empleado : empleados) {
                cmbEmple.addItem(empleado.getId() + "-" + empleado.getNombre());
            }
        } catch (Exception e) {
            Messages.error("Error!", "Algo salio mal al cargar los empleados");
            e.printStackTrace();
        }
    }

    private void getHijosEmpleados() {

        try {
            hijosEmple = hijoRepository.all();
            dtm.setRowCount(0);
            for (HijoEmpleado hEmple : hijosEmple) {
                dtm.addRow(new Object[]{
                    hEmple.getId(),
                    hEmple.getNombre(),
                    hEmple.getFechaNacimiento(),
                    hEmple.getEmpleadoId(),});
            }
        } catch (Exception e) {
            Messages.error("Error!", "Algo salio mal al cargar los hijos del empleado");
            e.printStackTrace();
        }
    }

    public FrmHijosEmple() {
        initComponents();
        String[] titulo = new String[]{"id", "Nombre", "Fecha Nacimiento", "empleado_id"};
        dtm.setColumnIdentifiers(titulo);
        tblTabla.setModel(dtm);

        this.hijoRepository = new HijoEmpleadoController();

        getEmpleados();
        getHijosEmpleados();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jdcFechaNaci = new com.toedter.calendar.JDateChooser();
        jLabel12 = new javax.swing.JLabel();
        cmbEmple = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        btnAgregar = new javax.swing.JButton();
        btnModificacion = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnConsulta = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTabla = new javax.swing.JTable();
        btnGuardar = new javax.swing.JButton();

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)), "Datos Hijos de Empleados"));

        jLabel10.setText("Nombre:");

        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });

        jLabel12.setText("Fecha Nacimiento:");

        jLabel11.setText("Empleado");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(jdcFechaNaci, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cmbEmple, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jdcFechaNaci, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbEmple, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153))));

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnModificacion.setText("Modificaci√≥n");
        btnModificacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificacionActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnConsulta.setText("Consulta");
        btnConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultaActionPerformed(evt);
            }
        });

        tblTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblTabla);

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(btnGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAgregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnModificacion)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminar)
                        .addGap(18, 18, 18)
                        .addComponent(btnConsulta)
                        .addGap(96, 96, 96))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnModificacion)
                    .addComponent(btnEliminar)
                    .addComponent(btnConsulta)
                    .addComponent(btnGuardar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public Boolean validarCampos() {

        if (txtNombre.getText().equals("")) {
            /* Si el campo de texto de nombre  es igual a vac√≠o*/
            JOptionPane.showMessageDialog(rootPane, "Debe digitar el nombre");
            //Muestra un mensaje de llamado de atenci√≥n.
            txtNombre.requestFocusInWindow(); //Se lleva el foco al campo de texto
            return false; //Lo saca del m√©todo.
        }

        if (jdcFechaNaci.getDate().after(new Date())) {
            /* Si el campo fecha Nacimiento */
            JOptionPane.showMessageDialog(rootPane, "Ingrese la fecha de Nacimiento ");
            //Muestra un mensaje de llamado de atenci√≥n.
            jdcFechaNaci.requestFocusInWindow();
            /*Se lleva el foco a la fecha de nacimiento  */
            return false; //Lo saca del m√©todo.
        }
        return true;
    }

    private void rellenarCampos(HijoEmpleado hijoEmple) {
        txtNombre.setText(hijoEmple.getNombre());
        jdcFechaNaci.setDate(hijoEmple.getFechaNacimiento());
    }

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        if (!validarCampos()) {
            return;
        }

        String name = txtNombre.getText();

        int empleadoId = Integer.parseInt(cmbEmple.getSelectedItem().toString().split("-", 2)[0]);

        HijoEmpleado hijEmple = new HijoEmpleado(
                name,
                jdcFechaNaci.getDate(),
                empleadoId
        );

        Boolean isCreated = hijoRepository.create(hijEmple);

        if (isCreated) {
            JOptionPane.showMessageDialog(rootPane, "El hijo del empleado " + name + " ha sido creado correctamente");

            getHijosEmpleados();
            return;
        }

        Messages.error("Error!", "No se pudo crear el centro");
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnModificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificacionActionPerformed
        int tableIndex = tblTabla.getSelectedRow();

        if (tableIndex == -1) {
            Messages.error("Error", "Debe seleccionar una fila");
            return;
        }

        int column = 0;
        int row = tblTabla.getSelectedRow();
        int hijoEmpId = Integer.parseInt(tblTabla.getModel().getValueAt(row, column).toString());

        int hijoEmpIndex = hijoRepository.indexOf(hijosEmple, hijoEmpId);

        if (hijoEmpIndex > -1) {

            HijoEmpleado hijEmple = hijosEmple.get(hijoEmpIndex);

            selectedHijoEmple = hijEmple;

            selectedIndex = tableIndex;
            rellenarCampos(hijEmple);
            btnGuardar.setEnabled(true);

            return;
        }

        Messages.error("Error", "No se encontro el centro");
    }//GEN-LAST:event_btnModificacionActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int tableIndex = tblTabla.getSelectedRow();

        if (tableIndex == -1) {
            Messages.error("Error", "Debe seleccionar una fila");
            return;
        }

        int column = 0;
        int row = tblTabla.getSelectedRow();
        int hijoEmpId = Integer.parseInt(tblTabla.getModel().getValueAt(row, column).toString());

        int hijoEmpIndex = hijoRepository.indexOf(hijosEmple, hijoEmpId);

        if (hijoEmpIndex > -1) {
            HijoEmpleado centro = hijosEmple.get(hijoEmpIndex);

            Boolean isDeleted = hijoRepository.delete(centro.id);

            if (isDeleted) {
                Messages.info("Eliminado", "El centro " + centro.getNombre() + " ha sido eliminado correctamente");
                dtm.removeRow(row);
            }
            return;
        }
        Messages.error("Error", "No se pudo eliminar el centro");
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultaActionPerformed
        String result = (String) JOptionPane.showInputDialog(
                this,
                "ingrese la id del hijo:\n",
                "buscar hijo",
                JOptionPane.PLAIN_MESSAGE,
                null,
                null,
                "100");

        if (result == null) {
            return;
        }

        try {
            HijoEmpleado hijEmple = hijoRepository.getById(Integer.parseInt(result));
            Messages.info("Todo salio bien", "Se ha encontrado el hijo " + hijEmple.getNombre());
            btnGuardar.setEnabled(true);
            rellenarCampos(hijEmple);
        } catch (Exception e) {
            Messages.error("Fallo", "El hijo con id " + result + " no se ha encontrado");
        }
    }//GEN-LAST:event_btnConsultaActionPerformed

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped
        // TODO add your handling code here:
        if (txtNombre.getText().length() >= 30) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtNombreKeyTyped

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (!validarCampos()) {
            return;
        }

        if (selectedHijoEmple == null) {
            Messages.error("Error!", "No hay un hijo para actualizar");
            return;
        }

        String nombre = txtNombre.getText();
        Date fechaNaci = jdcFechaNaci.getDate();
        int empleadoId = Integer.parseInt(cmbEmple.getSelectedItem().toString().split("-", 2)[0]);

        selectedHijoEmple.setNombre(nombre);
        selectedHijoEmple.setFechaNacimiento(fechaNaci);
        selectedHijoEmple.setEmpleadoId(empleadoId);

        Boolean result = hijoRepository.update(selectedHijoEmple);

        if (result) {
            Messages.info("Todo luce bien!", "Se actualizo el hijo " + selectedHijoEmple.getNombre() + " exitosamente");
            btnGuardar.setEnabled(false);

            tblTabla.setValueAt(selectedHijoEmple.getId(), selectedIndex, 0);

            tblTabla.setValueAt(nombre, selectedIndex, 1);

            tblTabla.setValueAt(fechaNaci, selectedIndex, 2);

            tblTabla.setValueAt(empleadoId, selectedIndex, 3);

        }
    }//GEN-LAST:event_btnGuardarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnConsulta;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificacion;
    private javax.swing.JComboBox<String> cmbEmple;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser jdcFechaNaci;
    private javax.swing.JTable tblTabla;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
