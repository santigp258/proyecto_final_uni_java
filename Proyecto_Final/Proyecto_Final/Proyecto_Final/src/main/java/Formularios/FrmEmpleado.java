/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Formularios;

import Clases.Messages;
import Controllers.EmpleadoController;
import Controllers.DepartamentoController;
import Models.Departamento;
import Models.Empleado;
import java.awt.Toolkit;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class FrmEmpleado extends javax.swing.JInternalFrame {

    /**
     * Creates new form FrmEmpleado
     */
    DefaultTableModel dtm = new DefaultTableModel();

    List<Empleado> empleados;
    List<Departamento> departamentos;

    EmpleadoController empleadoRepository;

    Empleado selectedEmpleado = null;

    int selectedIndex;

    private void getDepartamentos() {
        try {
            departamentos = new DepartamentoController().all();

            for (Departamento dep : departamentos) {
                cmbDepto.addItem(dep.getId() + "-" + dep.getNombre());
            }
        } catch (Exception e) {
            Messages.error("Error!", "Algo salio mal al cargar los departamentos");
            e.printStackTrace();
        }
    }

    private void getEmpleados() {
        dtm.setRowCount(0);
        try {
            empleados = empleadoRepository.all();

            for (Empleado empleado : empleados) {
                dtm.addRow(new Object[]{
                    empleado.getId(),
                    empleado.getTelefono(),
                    empleado.getFechaEntrada(),
                    empleado.getNombre(),
                    empleado.getDirResidencia(),
                    empleado.getSexo(),
                    empleado.getEstadoCivil(),
                    empleado.getFechaNacimiento(),
                    empleado.getNumHijos(),
                    empleado.getSalarioMensual(),
                    empleado.getDepartamentoId()
                });
            }
        } catch (Exception e) {
            Messages.error("Error!", "Algo salió mal al cargar los empleados");
            e.printStackTrace();
        }
    }

    public FrmEmpleado() {
        initComponents();

        String[] titulo = new String[]{"Id", "Telefono", "Fecha Entrada", "Nombre",
            "Dirección", "Sexo", "Estado Civil", "Fecha Nacimiento", "Número Hijos",
            "Salario Mensual"};
        dtm.setColumnIdentifiers(titulo);
        tblTabla.setModel(dtm);
        this.empleadoRepository = new EmpleadoController();
        getEmpleados();
        getDepartamentos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtTelEmple = new javax.swing.JTextField();
        jdcFechaAlta = new com.toedter.calendar.JDateChooser();
        txtNomEmple = new javax.swing.JTextField();
        txtDirecEmple = new javax.swing.JTextField();
        txtEstadoEmple = new javax.swing.JTextField();
        jdcFechaNaciEmple = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        txtNumHijos = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtSalario = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtSexo = new javax.swing.JTextField();
        cmbDepto = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        btnAgregar = new javax.swing.JButton();
        btnModificacion = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnConsulta = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTabla = new javax.swing.JTable();
        btnGuardar = new javax.swing.JButton();

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)), "Datos Empleados"));

        jLabel1.setText("Teléfono:");

        jLabel3.setText("Fecha Nacimiento:");

        jLabel4.setText("Dirección:");

        jLabel5.setText("Fecha de alta:");

        jLabel6.setText("Estado civil:");

        jLabel7.setText("Nombre:");

        txtTelEmple.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelEmpleKeyTyped(evt);
            }
        });

        txtNomEmple.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNomEmpleKeyTyped(evt);
            }
        });

        txtDirecEmple.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDirecEmpleKeyTyped(evt);
            }
        });

        txtEstadoEmple.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEstadoEmpleKeyTyped(evt);
            }
        });

        jLabel8.setText("Número de hijos:");

        txtNumHijos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumHijosKeyTyped(evt);
            }
        });

        jLabel9.setText("Salario:");

        txtSalario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSalarioKeyTyped(evt);
            }
        });

        jLabel10.setText("Sexo:");

        txtSexo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSexoKeyTyped(evt);
            }
        });

        jLabel11.setText("Departamento");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jdcFechaAlta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtTelEmple, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNomEmple, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDirecEmple, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(35, 35, 35)
                            .addComponent(txtEstadoEmple, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel10)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNumHijos, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jdcFechaNaciEmple, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSalario, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbDepto, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTelEmple, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel9)
                    .addComponent(txtSalario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(txtSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6)
                                .addComponent(txtEstadoEmple, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jdcFechaAlta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jdcFechaNaciEmple, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtNomEmple, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(cmbDepto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(txtDirecEmple, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(txtNumHijos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153))));

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnModificacion.setText("Modificación");
        btnModificacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificacionActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnConsulta.setText("Consulta");
        btnConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultaActionPerformed(evt);
            }
        });

        tblTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblTabla);

        btnGuardar.setText("Guardar");
        btnGuardar.setEnabled(false);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 802, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(btnGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAgregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnModificacion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnConsulta)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnModificacion)
                    .addComponent(btnEliminar)
                    .addComponent(btnConsulta)
                    .addComponent(btnGuardar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(226, 226, 226))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public Boolean validarCampos() {
        if (txtTelEmple.getText().equals("")) {
            /* Si el campo de texto del telefono del empleado es igual a vacío*/
            JOptionPane.showMessageDialog(rootPane, "Debe digitar el telefono del empleado");
            //Muestra un mensaje de llamado de atención.
            txtTelEmple.requestFocusInWindow(); //Se lleva el foco al campo de texto
            return false; //Lo saca del método.
        }

        if (jdcFechaAlta.getDate().after(new Date())) {
            /* Si el campo fecha Alta */
            JOptionPane.showMessageDialog(rootPane, "Ingrese la fecha de Alta");
            //Muestra un mensaje de llamado de atención.
            jdcFechaAlta.requestFocusInWindow();/*Se lleva el foco a la fecha de Alta  */
            return false; //Lo saca del método.
        }

        if (txtNomEmple.getText().equals("")) {
            /* Si el campo de texto de nombre Empleado es igual a vacío*/
            JOptionPane.showMessageDialog(rootPane, "Debe digitar el nombre del Empleado");
            //Muestra un mensaje de llamado de atención.
            txtNomEmple.requestFocusInWindow(); //Se lleva el foco al campo de texto
            return false; //Lo saca del método.
        }

        if (txtDirecEmple.getText().equals("")) {
            /* Si el campo de texto de direccion del Empleado es igual a vacío*/
            JOptionPane.showMessageDialog(rootPane, "Debe digitar la Direccion del Empleado");
            //Muestra un mensaje de llamado de atención.
            txtDirecEmple.requestFocusInWindow(); //Se lleva el foco al campo de texto
            return false; //Lo saca del método.
        }

        if (txtSexo.getText().equals("")) {
            /* Si el campo de texto de Salario es igual a vacío*/
            JOptionPane.showMessageDialog(rootPane, "Debe digitar el sexo del Empleado");
            //Muestra un mensaje de llamado de atención.
            txtSexo.requestFocusInWindow(); //Se lleva el foco al campo de texto
            return false; //Lo saca del método.
        }

        if (txtEstadoEmple.getText().equals("")) {
            /* Si el campo de texto de Estado Empleado es igual a vacío*/
            JOptionPane.showMessageDialog(rootPane, "Debe digitar el estado del Empleado");
            //Muestra un mensaje de llamado de atención.
            txtEstadoEmple.requestFocusInWindow(); //Se lleva el foco al campo de texto
            return false; //Lo saca del método.
        }

        if (jdcFechaNaciEmple.getDate().after(new Date())) {
            /* Si el campo fecha Nacimiento Empleado */
            JOptionPane.showMessageDialog(rootPane, "Ingrese la fecha de Nacimiento del Empleado");
            //Muestra un mensaje de llamado de atención.
            jdcFechaNaciEmple.requestFocusInWindow();
            /*Se lleva el foco a la fecha de nacimiento  */
            return false; //Lo saca del método.
        }

        if (txtNumHijos.getText().equals("")) {
            /* Si el campo de texto de numero de hijos es igual a vacío*/
            JOptionPane.showMessageDialog(rootPane, "Debe digitar el numero de hijos del Empleado");
            //Muestra un mensaje de llamado de atención.
            txtNumHijos.requestFocusInWindow(); //Se lleva el foco al campo de texto
            return false; //Lo saca del método.
        }

        if (txtSalario.getText().equals("")) {
            /* Si el campo de texto de Salario es igual a vacío*/
            JOptionPane.showMessageDialog(rootPane, "Debe digitar el Salario del Empleado");
            //Muestra un mensaje de llamado de atención.
            txtSalario.requestFocusInWindow(); //Se lleva el foco al campo de texto
            return false; //Lo saca del método.
        }
        return true;
    }

    private void rellenarCampos(Empleado emple) {

        txtTelEmple.setText(emple.getTelefono());
        jdcFechaAlta.setDate(emple.getFechaEntrada());
        txtNomEmple.setText(emple.getNombre());
        txtDirecEmple.setText(emple.getDirResidencia());
        txtSexo.setText(emple.getSexo());
        txtEstadoEmple.setText(emple.getEstadoCivil());
        jdcFechaNaciEmple.setDate(emple.getFechaNacimiento());
        txtNumHijos.setText(emple.getNumHijos() + "");
        txtSalario.setText(emple.getSalarioMensual() + "");
    }

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        if (!validarCampos()) {
            return;
        }

        String tel = txtTelEmple.getText();
        int nHijos = Integer.parseInt(txtNumHijos.getText());
        double sala = Double.parseDouble(txtSalario.getText());

        int deptId = Integer.parseInt(cmbDepto.getSelectedItem().toString().split("-", 2)[0]);

        Empleado emple = new Empleado(
                tel,
                jdcFechaAlta.getDate(),
                txtNomEmple.getText(),
                txtDirecEmple.getText(),
                txtSexo.getText(),
                txtEstadoEmple.getText(),
                jdcFechaNaciEmple.getDate(),
                nHijos,
                sala,
                deptId
        );

        Boolean isCreated = empleadoRepository.create(emple);

        if (isCreated) {
            JOptionPane.showMessageDialog(rootPane, "El empleado " + tel + " ha sido creado correctamente");

            getEmpleados();
            return;
        }

        Messages.error("Error!", "No se pudo crear el empleado");

    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnModificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificacionActionPerformed
        int tableIndex = tblTabla.getSelectedRow();

        if (tableIndex == -1) {
            Messages.error("Error", "Debe seleccionar una fila");
            return;
        }

        int column = 0;
        int row = tblTabla.getSelectedRow();
        int empleId = Integer.parseInt(tblTabla.getModel().getValueAt(row, column).toString());

        int empleIndex = empleadoRepository.indexOf(empleados, empleId);

        if (empleIndex > -1) {

            Empleado emple = empleados.get(empleIndex);

            selectedEmpleado = emple;

            selectedIndex = tableIndex;
            rellenarCampos(emple);
            btnGuardar.setEnabled(true);

            return;
        }

        Messages.error("Error", "No se encontro el empleado");
    }//GEN-LAST:event_btnModificacionActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int tableIndex = tblTabla.getSelectedRow();

        if (tableIndex == -1) {
            Messages.error("Error", "Debe seleccionar una fila");
            return;
        }

        int column = 0;
        int row = tblTabla.getSelectedRow();
        int empleId = Integer.parseInt(tblTabla.getModel().getValueAt(row, column).toString());

        int empleIndex = empleadoRepository.indexOf(empleados, empleId);

        if (empleIndex > -1) {
            Empleado emple = empleados.get(empleIndex);

            Boolean isDeleted = empleadoRepository.delete(emple.id);

            if (isDeleted) {
                Messages.info("Eliminado", "El empleado " + emple.getTelefono() + " ha sido eliminado correctamente");
                dtm.removeRow(row);
            }
            return;
        }
        Messages.error("Error", "No se pudo eliminar el empleado");
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultaActionPerformed
        String result = (String) JOptionPane.showInputDialog(
                this,
                "ingrese la id del empleado:\n",
                "buscar empleado",
                JOptionPane.PLAIN_MESSAGE,
                null,
                null,
                "100");

        if (result == null) {
            return;
        }

        try {
            Empleado emple = empleadoRepository.getById(Integer.parseInt(result));
            Messages.info("Todo salio bien", "Se ha encontrado el empleado " + emple.getNombre());
            btnGuardar.setEnabled(true);
            rellenarCampos(emple);
        } catch (Exception e) {
            Messages.error("Fallo", "El empleado con id " + result + " no se ha encontrado");
        }
    }//GEN-LAST:event_btnConsultaActionPerformed

    private void txtTelEmpleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelEmpleKeyTyped
        // TODO add your handling code here:
        if (txtTelEmple.getText().length() >= 20) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtTelEmpleKeyTyped

    private void txtNomEmpleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomEmpleKeyTyped
        // TODO add your handling code here:
        if (txtNomEmple.getText().length() >= 20) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtNomEmpleKeyTyped

    private void txtDirecEmpleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDirecEmpleKeyTyped
        // TODO add your handling code here:
        if (txtDirecEmple.getText().length() >= 30) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtDirecEmpleKeyTyped

    private void txtSexoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSexoKeyTyped
        // TODO add your handling code here:
        if (txtSexo.getText().length() >= 10) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtSexoKeyTyped

    private void txtEstadoEmpleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEstadoEmpleKeyTyped
        // TODO add your handling code here:
        if (txtEstadoEmple.getText().length() >= 15) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtEstadoEmpleKeyTyped

    private void txtNumHijosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumHijosKeyTyped
        // TODO add your handling code here:
        if (txtNumHijos.getText().length() >= 3) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtNumHijosKeyTyped

    private void txtSalarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSalarioKeyTyped
        // TODO add your handling code here:
        if (txtSalario.getText().length() >= 30) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtSalarioKeyTyped

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed

        if (!validarCampos()) {
            return;
        }

        if (selectedEmpleado == null) {
            Messages.error("Error!", "No hay un empleado para actualizar");
            return;
        }

        String telefono = txtTelEmple.getText();
        Date fechaEntrada = jdcFechaAlta.getDate();
        String nombre = txtNomEmple.getText();
        String direccion = txtDirecEmple.getText();
        String sexo = txtSexo.getText();
        String estEmple = txtEstadoEmple.getText();
        Date fechaNaci = jdcFechaNaciEmple.getDate();
        String numHijos = txtNumHijos.getText();
        String salario = txtSalario.getText();
        int deptId = Integer.parseInt(cmbDepto.getSelectedItem().toString().split("-", 2)[0]);

        selectedEmpleado.setTelefono(telefono);
        selectedEmpleado.setFechaEntrada(fechaEntrada);
        selectedEmpleado.setNombre(nombre);
        selectedEmpleado.setDirResidencia(direccion);
        selectedEmpleado.setSexo(sexo);
        selectedEmpleado.setEstadoCivil(estEmple);
        selectedEmpleado.setFechaNacimiento(fechaNaci);
        selectedEmpleado.setNumHijos(Integer.parseInt(numHijos));
        selectedEmpleado.setSalarioMensual(Double.parseDouble(salario));
        selectedEmpleado.setDepartamentoId(deptId);

        Boolean result = empleadoRepository.update(selectedEmpleado);

        if (result) {
            Messages.info("Todo luce bien!", "Se actualizo el empleado " + selectedEmpleado.getNombre() + " exitosamente");
            btnGuardar.setEnabled(false);

            tblTabla.setValueAt(selectedEmpleado.getId(), selectedIndex, 0);

            tblTabla.setValueAt(telefono, selectedIndex, 1);

            tblTabla.setValueAt(fechaEntrada, selectedIndex, 2);

            tblTabla.setValueAt(nombre, selectedIndex, 3);

            tblTabla.setValueAt(direccion, selectedIndex, 4);

            tblTabla.setValueAt(sexo, selectedIndex, 5);

            tblTabla.setValueAt(estEmple, selectedIndex, 6);

            tblTabla.setValueAt(fechaNaci, selectedIndex, 7);

            tblTabla.setValueAt(numHijos, selectedIndex, 8);

            tblTabla.setValueAt(salario, selectedIndex, 9);
        }

    }//GEN-LAST:event_btnGuardarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnConsulta;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificacion;
    private javax.swing.JComboBox<String> cmbDepto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser jdcFechaAlta;
    private com.toedter.calendar.JDateChooser jdcFechaNaciEmple;
    private javax.swing.JTable tblTabla;
    private javax.swing.JTextField txtDirecEmple;
    private javax.swing.JTextField txtEstadoEmple;
    private javax.swing.JTextField txtNomEmple;
    private javax.swing.JTextField txtNumHijos;
    private javax.swing.JTextField txtSalario;
    private javax.swing.JTextField txtSexo;
    private javax.swing.JTextField txtTelEmple;
    // End of variables declaration//GEN-END:variables
}
