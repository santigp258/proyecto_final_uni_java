package Formularios;

import Clases.Messages;
import Controllers.HabilidadController;
import Models.Habilidad;
import java.awt.Toolkit;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Laura Isabel
 */
public class FrmHabiliEmple extends javax.swing.JInternalFrame {
    
    DefaultTableModel dtm = new DefaultTableModel();
    
    List<Habilidad> habilidades;
    
    HabilidadController habilidadesRepository;
    
    Habilidad selectedHabili = null;
    
    int selectedIndex;
    
    private void getHabilidades() {
        try {
            habilidades = habilidadesRepository.all();
            dtm.setRowCount(0);
            for (Habilidad habilidad : habilidades) {
                dtm.addRow(new Object[]{
                    habilidad.getId(),
                    habilidad.getDescripcion()
                });
            }
        } catch (Exception e) {
            Messages.error("Error!", "Algo salio mal al cargar las habilidades");
            e.printStackTrace();
        }
    }
    
    public FrmHabiliEmple() {
        initComponents();
        String[] titulo = new String[]{"id", "Descripcion"};
        dtm.setColumnIdentifiers(titulo);
        tblTabla.setModel(dtm);
        
        this.habilidadesRepository = new HabilidadController();
        getHabilidades();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        btnAgregar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnConsulta = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTabla = new javax.swing.JTable();
        btnGuardar = new javax.swing.JButton();

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)), "Datos Habilidades de Empleados"));

        jLabel14.setText("Descripción:");

        txtDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDescripcionKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addGap(23, 23, 23)
                .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153))));

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificación");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnConsulta.setText("Consulta");
        btnConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultaActionPerformed(evt);
            }
        });

        tblTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblTabla);

        btnGuardar.setText("Guardar");
        btnGuardar.setEnabled(false);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGuardar)
                .addGap(18, 18, 18)
                .addComponent(btnAgregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnModificar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnConsulta)
                .addGap(128, 128, 128))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnModificar)
                    .addComponent(btnEliminar)
                    .addComponent(btnConsulta)
                    .addComponent(btnGuardar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public Boolean validarCampos() {
        
        if (txtDescripcion.getText().equals("")) {
            /* Si el campo de texto de Descripcion es igual a vacío*/
            JOptionPane.showMessageDialog(rootPane, "Debe digitar  la Descripcion");
            //Muestra un mensaje de llamado de atención.
            txtDescripcion.requestFocusInWindow(); //Se lleva el foco al campo de texto
            return false; //Lo saca del método.
        }
        return true;
    }
    
    private void rellenarCampos(Habilidad habili) {
        txtDescripcion.setText(habili.getDescripcion());
        
    }

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        if (!validarCampos()) {
            return;
        }
        
        String descrip = txtDescripcion.getText();
        
        Habilidad habili = new Habilidad(
                descrip
        );
        
        Boolean isCreated = habilidadesRepository.create(habili);
        
        if (isCreated) {
            JOptionPane.showMessageDialog(rootPane, "La habilidad " + descrip + " ha sido creado correctamente");
            
            getHabilidades();
            return;
        }
        
        Messages.error("Error!", "No se pudo crear la habilidad");

    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        int tableIndex = tblTabla.getSelectedRow();
        
        if (tableIndex == -1) {
            Messages.error("Error", "Debe seleccionar una fila");
            return;
        }
        
        int column = 0;
        int row = tblTabla.getSelectedRow();
        int habilidadId = Integer.parseInt(tblTabla.getModel().getValueAt(row, column).toString());
        
        int habilidadIndex = habilidadesRepository.indexOf(habilidades, habilidadId);
        
        if (habilidadIndex > -1) {
            
            Habilidad habi = habilidades.get(habilidadIndex);
            
            selectedHabili = habi;
            
            selectedIndex = tableIndex;
            rellenarCampos(habi);
            btnGuardar.setEnabled(true);
            
            return;
        }
        
        Messages.error("Error", "No se encontro la habilidad");
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int tableIndex = tblTabla.getSelectedRow();
        
        if (tableIndex == -1) {
            Messages.error("Error", "Debe seleccionar una fila");
            return;
        }
        
        int column = 0;
        int row = tblTabla.getSelectedRow();
        int habilidadId = Integer.parseInt(tblTabla.getModel().getValueAt(row, column).toString());
        
        int habilidadIndex = habilidadesRepository.indexOf(habilidades, habilidadId);
        
        if (habilidadIndex > -1) {
            Habilidad habi = habilidades.get(habilidadIndex);
            
            Boolean isDeleted = habilidadesRepository.delete(habi.id);
            
            if (isDeleted) {
                Messages.info("Eliminado", "La habilidad " + habi.getDescripcion() + " ha sido eliminado correctamente");
                dtm.removeRow(row);
            }
            return;
        }
        Messages.error("Error", "No se pudo eliminar el centro");
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultaActionPerformed
        String result = (String) JOptionPane.showInputDialog(
                this,
                "ingrese la id del centro:\n",
                "buscar cliente",
                JOptionPane.PLAIN_MESSAGE,
                null,
                null,
                "100");
        
        if (result == null) {
            return;
        }
        
        try {
            Habilidad habi = habilidadesRepository.getById(Integer.parseInt(result));
            Messages.info("Todo salio bien", "Se ha encontrado la habilidad " + habi.getDescripcion());
            btnGuardar.setEnabled(true);
            rellenarCampos(habi);
        } catch (Exception e) {
            Messages.error("Fallo", "El centro con id " + result + " no se ha encontrado");
        }
    }//GEN-LAST:event_btnConsultaActionPerformed

    private void txtDescripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescripcionKeyTyped
        // TODO add your handling code here:     
        if (txtDescripcion.getText().length() >= 200) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtDescripcionKeyTyped

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (!validarCampos()) {
            return;
        }
        
        if (selectedHabili == null) {
            Messages.error("Error!", "No hay un centro para actualizar");
            return;
        }
        
        String descrip = txtDescripcion.getText();
        
        selectedHabili.setDescripcion(descrip);
        
        Boolean result = habilidadesRepository.update(selectedHabili);
        
        if (result) {
            Messages.info("Todo luce bien!", "Se actualizo la habilidad " + selectedHabili.getDescripcion() + " exitosamente");
            btnGuardar.setEnabled(false);
            
            tblTabla.setValueAt(selectedHabili.getId(), selectedIndex, 0);
            
            tblTabla.setValueAt(descrip, selectedIndex, 1);
            
        }
    }//GEN-LAST:event_btnGuardarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnConsulta;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTabla;
    private javax.swing.JTextField txtDescripcion;
    // End of variables declaration//GEN-END:variables
}
