/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Formularios;

import Clases.Messages;
import Controllers.DepartamentoController;
import Controllers.CentroTrabajoController;
import Models.CentroTrabajo;
import Models.Departamento;
import java.awt.Toolkit;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Laura Isabel
 */
public class FrmDepto extends javax.swing.JInternalFrame {

    /**
     * Creates new form FrmDepto
     */
    List<Departamento> departamentos;

    List<CentroTrabajo> centros;

    DepartamentoController departamentoRepository;

    Departamento selectedDepartamento = null;

    int selectedIndex;

    DefaultTableModel dtm = new DefaultTableModel();

    private void getCentros() {
        try {
            centros = new CentroTrabajoController().all();

            for (CentroTrabajo centro : centros) {
                cmbCentro.addItem(centro.getId() + "-" + centro.getNombre());
            }
        } catch (Exception e) {
            Messages.error("Error!", "Algo salio mal al cargar los centros");
            e.printStackTrace();
        }
    }

    private void getDepartamentos() {

        try {
            departamentos = departamentoRepository.all();
            dtm.setRowCount(0);
            for (Departamento dep : departamentos) {
                int totalEmpleados = departamentoRepository.getEmpleados(dep.getId()).size();
                dtm.addRow(new Object[]{
                    dep.getId(),
                    dep.getNombre(),
                    dep.getPresuAnual(),
                    dep.getCentroId(),
                    totalEmpleados}
                );
            }
        } catch (Exception e) {
            Messages.error("Error!", "Algo salio mal al cargar los departamentos");
            e.printStackTrace();
        }
    }

    public FrmDepto() {
        initComponents();

        departamentoRepository = new DepartamentoController();

        String[] titulo = new String[]{"Id", "Nombre", "Presupuesto Anual", "centro_id", "Total empleados"};
        dtm.setColumnIdentifiers(titulo);
        tblTabla.setModel(dtm);

        getDepartamentos();
        getCentros();

    }

    private void rellenarCampos(Departamento dep) {
        txtNomDepto.setText(dep.getNombre());
        txtPresuDepto.setText(dep.getPresuAnual() + "");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtNomDepto = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtPresuDepto = new javax.swing.JTextField();
        cmbCentro = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        btnAgregar = new javax.swing.JButton();
        btnModificacion = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnConsulta = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTabla = new javax.swing.JTable();
        btnGuardar = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)), "Datos Departamentos"));

        jLabel10.setText("Nombre:");

        txtNomDepto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNomDeptoKeyTyped(evt);
            }
        });

        jLabel12.setText("Presupuesto Anual:");

        txtPresuDepto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPresuDeptoKeyTyped(evt);
            }
        });

        cmbCentro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCentroActionPerformed(evt);
            }
        });

        jLabel13.setText("Centro");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNomDepto, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmbCentro, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtPresuDepto, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(txtNomDepto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(txtPresuDepto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbCentro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153))));

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnModificacion.setText("Modificaci√≥n");
        btnModificacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificacionActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnConsulta.setText("Consulta");
        btnConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultaActionPerformed(evt);
            }
        });

        tblTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblTabla);

        btnGuardar.setText("Guardar");
        btnGuardar.setEnabled(false);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(btnGuardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAgregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnModificacion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnConsulta)
                .addGap(130, 130, 130))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnModificacion)
                    .addComponent(btnEliminar)
                    .addComponent(btnConsulta)
                    .addComponent(btnGuardar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public Boolean validarCampos() {

        if (txtNomDepto.getText().equals("")) {
            /* Si el campo de texto del Nombre del Departamento es igual a vac√≠o*/
            JOptionPane.showMessageDialog(rootPane, "Debe digitar un Nombre de Departamento");
            //Muestra un mensaje de llamado de atenci√≥n.
            txtNomDepto.requestFocusInWindow(); //Se lleva el foco al campo de texto
            return false; //Lo saca del m√©todo.
        }

        if (txtPresuDepto.getText().equals("")) {
            /* Si el campo de texto del Presupuesto del Departamento es igual a vac√≠o*/
            JOptionPane.showMessageDialog(rootPane, "Debe digitar un resupuesto del Departamento");
            //Muestra un mensaje de llamado de atenci√≥n.
            txtPresuDepto.requestFocusInWindow(); //Se lleva el foco al campo de texto
            return false; //Lo saca del m√©todo.
        }
        return true;
    }
    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        if (!validarCampos()) {
            return;
        }

        String name = txtNomDepto.getText();
        int centroId = Integer.parseInt(cmbCentro.getSelectedItem().toString().split("-", 2)[0]);
        System.out.println("Formularios.FrmDepto.btnAgregarActionPerformed()" + centroId + " ");
        Departamento dep = new Departamento(
                name,
                Double.parseDouble(txtPresuDepto.getText()),
                centroId);

        Boolean isCreated = departamentoRepository.create(dep);

        if (isCreated) {
            JOptionPane.showMessageDialog(rootPane, "El deparmento " + name + " ha sido creado correctamente");

            getDepartamentos();
            return;
        }

        Messages.error("Error!", "No se pudo crear el departamento");

    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnModificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificacionActionPerformed
        int tableIndex = tblTabla.getSelectedRow();

        if (tableIndex == -1) {
            Messages.error("Error", "Debe seleccionar una fila");
            return;
        }

        int column = 0;
        int row = tblTabla.getSelectedRow();
        int centroId = Integer.parseInt(tblTabla.getModel().getValueAt(row, column).toString());

        int centroIndex = departamentoRepository.indexOf(departamentos, centroId);

        if (centroIndex > -1) {

            Departamento dep = departamentos.get(centroIndex);

            selectedDepartamento = dep;

            selectedIndex = tableIndex;
            rellenarCampos(dep);
            btnGuardar.setEnabled(true);

            return;
        }

        Messages.error("Error", "No se encontro el departamento");
    }//GEN-LAST:event_btnModificacionActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int tableIndex = tblTabla.getSelectedRow();

        if (tableIndex == -1) {
            Messages.error("Error", "Debe seleccionar una fila");
            return;
        }

        int column = 0;
        int row = tblTabla.getSelectedRow();
        int centroId = Integer.parseInt(tblTabla.getModel().getValueAt(row, column).toString());

        int centroIndex = departamentoRepository.indexOf(departamentos, centroId);

        if (centroIndex > -1) {
            Departamento dep = departamentos.get(centroIndex);

            Boolean isDeleted = departamentoRepository.delete(dep.id);

            if (isDeleted) {
                Messages.info("Eliminado", "El departamento " + dep.getNombre() + " ha sido eliminado correctamente");
                dtm.removeRow(row);
            }
            return;
        }
        Messages.error("Error", "No se pudo eliminar el departamento");
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultaActionPerformed
        String result = (String) JOptionPane.showInputDialog(
                this,
                "ingrese la id del centro:\n",
                "buscar cliente",
                JOptionPane.PLAIN_MESSAGE,
                null,
                null,
                "100");

        if (result == null) {
            return;
        }

        try {
            Departamento dep = departamentoRepository.getById(Integer.parseInt(result));
            Messages.info("Todo salio bien", "Se ha encontrado el departamento " + dep.getNombre());
            btnGuardar.setEnabled(true);
            rellenarCampos(dep);
        } catch (Exception e) {
            Messages.error("Fallo", "El deparamento con id " + result + " no se ha encontrado");
        }
    }//GEN-LAST:event_btnConsultaActionPerformed

    private void txtNomDeptoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomDeptoKeyTyped
        // TODO add your handling code here:
        if (txtNomDepto.getText().length() >= 30) { //Le ponemos el l√≠mite que establecimos previamente en la BD
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
            /*Si supera este l√≠mite, no nos dejar√° ingresar m√°s caracteres y
                                                     nos genera un sonido de adveretencia*/
        }
    }//GEN-LAST:event_txtNomDeptoKeyTyped

    private void txtPresuDeptoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPresuDeptoKeyTyped
        // TODO add your handling code here:
        if (txtPresuDepto.getText().length() >= 30) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtPresuDeptoKeyTyped

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (!validarCampos()) {
            return;
        }

        if (selectedDepartamento == null) {
            Messages.error("Error!", "No hay un centro para actualizar");
            return;
        }

        String nombre = txtNomDepto.getText();
        Double presuAnual = Double.parseDouble(txtPresuDepto.getText());
        int centroId = Integer.parseInt(cmbCentro.getSelectedItem().toString().split("-", 2)[0]);

        selectedDepartamento.setNombre(nombre);
        selectedDepartamento.setPresuAnual(presuAnual);
        selectedDepartamento.setCentroId(centroId);

        Boolean result = departamentoRepository.update(selectedDepartamento);

        if (result) {
            Messages.info("Todo luce bien!", "Se actualizo el centro " + selectedDepartamento.getNombre() + " exitosamente");
            btnGuardar.setEnabled(false);

            tblTabla.setValueAt(selectedDepartamento.getId(), selectedIndex, 0);

            tblTabla.setValueAt(nombre, selectedIndex, 1);

            tblTabla.setValueAt(presuAnual, selectedIndex, 2);

            tblTabla.setValueAt(centroId, selectedIndex, 3);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void cmbCentroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCentroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbCentroActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnConsulta;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificacion;
    private javax.swing.JComboBox<String> cmbCentro;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTabla;
    private javax.swing.JTextField txtNomDepto;
    private javax.swing.JTextField txtPresuDepto;
    // End of variables declaration//GEN-END:variables
}
